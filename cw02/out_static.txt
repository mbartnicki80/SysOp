
collatz_conjecture_static:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	push   0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmp *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmp *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <printf@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmp *0x2f75(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	45 31 c0             	xor    %r8d,%r8d
    1076:	31 c9                	xor    %ecx,%ecx
    1078:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 1149 <main>
    107f:	ff 15 53 2f 00 00    	call   *0x2f53(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1085:	f4                   	hlt    
    1086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    108d:	00 00 00 

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4010 <__TMC_END__>
    1097:	48 8d 05 72 2f 00 00 	lea    0x2f72(%rip),%rax        # 4010 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 36 2f 00 00 	mov    0x2f36(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	ret    
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4010 <__TMC_END__>
    10c7:	48 8d 35 42 2f 00 00 	lea    0x2f42(%rip),%rsi        # 4010 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 05 2f 00 00 00 	cmpb   $0x0,0x2f05(%rip)        # 4010 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	call   1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	call   1090 <deregister_tm_clones>
    112c:	c6 05 dd 2e 00 00 01 	movb   $0x1,0x2edd(%rip)        # 4010 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	ret    
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmp    10c0 <register_tm_clones>

0000000000001149 <main>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	be 0a 00 00 00       	mov    $0xa,%esi
    1156:	bf 05 00 00 00       	mov    $0x5,%edi
    115b:	e8 c3 00 00 00       	call   1223 <test_collatz_convergence>
    1160:	89 c6                	mov    %eax,%esi
    1162:	48 8d 05 9f 0e 00 00 	lea    0xe9f(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    1169:	48 89 c7             	mov    %rax,%rdi
    116c:	b8 00 00 00 00       	mov    $0x0,%eax
    1171:	e8 da fe ff ff       	call   1050 <printf@plt>
    1176:	be 32 00 00 00       	mov    $0x32,%esi
    117b:	bf 0a 00 00 00       	mov    $0xa,%edi
    1180:	e8 9e 00 00 00       	call   1223 <test_collatz_convergence>
    1185:	89 c6                	mov    %eax,%esi
    1187:	48 8d 05 a2 0e 00 00 	lea    0xea2(%rip),%rax        # 2030 <_IO_stdin_used+0x30>
    118e:	48 89 c7             	mov    %rax,%rdi
    1191:	b8 00 00 00 00       	mov    $0x0,%eax
    1196:	e8 b5 fe ff ff       	call   1050 <printf@plt>
    119b:	be 64 00 00 00       	mov    $0x64,%esi
    11a0:	bf 64 00 00 00       	mov    $0x64,%edi
    11a5:	e8 79 00 00 00       	call   1223 <test_collatz_convergence>
    11aa:	89 c6                	mov    %eax,%esi
    11ac:	48 8d 05 ad 0e 00 00 	lea    0xead(%rip),%rax        # 2060 <_IO_stdin_used+0x60>
    11b3:	48 89 c7             	mov    %rax,%rdi
    11b6:	b8 00 00 00 00       	mov    $0x0,%eax
    11bb:	e8 90 fe ff ff       	call   1050 <printf@plt>
    11c0:	be 19 00 00 00       	mov    $0x19,%esi
    11c5:	bf c8 00 00 00       	mov    $0xc8,%edi
    11ca:	e8 54 00 00 00       	call   1223 <test_collatz_convergence>
    11cf:	89 c6                	mov    %eax,%esi
    11d1:	48 8d 05 b8 0e 00 00 	lea    0xeb8(%rip),%rax        # 2090 <_IO_stdin_used+0x90>
    11d8:	48 89 c7             	mov    %rax,%rdi
    11db:	b8 00 00 00 00       	mov    $0x0,%eax
    11e0:	e8 6b fe ff ff       	call   1050 <printf@plt>
    11e5:	b8 00 00 00 00       	mov    $0x0,%eax
    11ea:	5d                   	pop    %rbp
    11eb:	c3                   	ret    

00000000000011ec <collatz_conjecture>:
    11ec:	f3 0f 1e fa          	endbr64 
    11f0:	55                   	push   %rbp
    11f1:	48 89 e5             	mov    %rsp,%rbp
    11f4:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11fa:	83 e0 01             	and    $0x1,%eax
    11fd:	85 c0                	test   %eax,%eax
    11ff:	75 14                	jne    1215 <collatz_conjecture+0x29>
    1201:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1204:	89 c2                	mov    %eax,%edx
    1206:	c1 ea 1f             	shr    $0x1f,%edx
    1209:	01 d0                	add    %edx,%eax
    120b:	d1 f8                	sar    %eax
    120d:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1210:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1213:	eb 0c                	jmp    1221 <collatz_conjecture+0x35>
    1215:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1218:	89 d0                	mov    %edx,%eax
    121a:	01 c0                	add    %eax,%eax
    121c:	01 d0                	add    %edx,%eax
    121e:	83 c0 01             	add    $0x1,%eax
    1221:	5d                   	pop    %rbp
    1222:	c3                   	ret    

0000000000001223 <test_collatz_convergence>:
    1223:	f3 0f 1e fa          	endbr64 
    1227:	55                   	push   %rbp
    1228:	48 89 e5             	mov    %rsp,%rbp
    122b:	48 83 ec 18          	sub    $0x18,%rsp
    122f:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1232:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1235:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    1239:	75 07                	jne    1242 <test_collatz_convergence+0x1f>
    123b:	b8 00 00 00 00       	mov    $0x0,%eax
    1240:	eb 35                	jmp    1277 <test_collatz_convergence+0x54>
    1242:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1249:	eb 1f                	jmp    126a <test_collatz_convergence+0x47>
    124b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    124e:	89 c7                	mov    %eax,%edi
    1250:	e8 97 ff ff ff       	call   11ec <collatz_conjecture>
    1255:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1258:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    125c:	75 08                	jne    1266 <test_collatz_convergence+0x43>
    125e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1261:	83 c0 01             	add    $0x1,%eax
    1264:	eb 11                	jmp    1277 <test_collatz_convergence+0x54>
    1266:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    126a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    126d:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    1270:	7c d9                	jl     124b <test_collatz_convergence+0x28>
    1272:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1277:	c9                   	leave  
    1278:	c3                   	ret    

Disassembly of section .fini:

000000000000127c <_fini>:
    127c:	f3 0f 1e fa          	endbr64 
    1280:	48 83 ec 08          	sub    $0x8,%rsp
    1284:	48 83 c4 08          	add    $0x8,%rsp
    1288:	c3                   	ret    
